networks:
  sentiric-net:
    name: ${NETWORK_NAME:-sentiric-net}
    driver: bridge

volumes:
  rabbitmq_data:
  postgres_data:

services:

  postgres:
    image: postgres:16-alpine
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../sentiric-config/postgres-init:/docker-entrypoint-initdb.d
    # ports:
    #   - "${POSTGRES_DB_PORT}:${POSTGRES_DB_PORT}"
    networks:
      - sentiric-net
    profiles:
      - default
      - data
    restart: always

    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5    

  rabbitmq:
    image: rabbitmq:4.1.0-management-alpine
    env_file:
      - ./.env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    # ports:
    #   - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
    #   - "15672:15672"
    networks:
      - sentiric-net
    profiles:
      - default
      - data
    restart: always

    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3    

  media-service:
    build:
      context: ../sentiric-media-service
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: sentiric-media-service
    env_file:
      - ./.env
    volumes:
      - ../sentiric-config/tls/certs:/etc/sentiric/tls:ro
    ports:
      - "${RTP_SERVICE_PORT_MIN:-10000}-${RTP_SERVICE_PORT_MAX:-10100}:${RTP_SERVICE_PORT_MIN:-10000}-${RTP_SERVICE_PORT_MAX:-10100}/udp"
      # - "${MEDIA_SERVICE_GRPC_PORT}:${MEDIA_SERVICE_GRPC_PORT}"
    networks:
      - sentiric-net
    profiles:
      - default
      - telekom

    depends_on:
      user-service:
        condition: service_started # media-service'in DB'ye direkt bağımlılığı yok, user-service'in başlaması yeterli
      dialplan-service:
        condition: service_started      

  user-service:
    build:
      context: ../sentiric-user-service
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: sentiric-user-service
    env_file:
      - ./.env
    volumes:
      - ../sentiric-config/tls/certs:/etc/sentiric/tls:ro
    # ports:
    #   - "${USER_SERVICE_GRPC_PORT}:${USER_SERVICE_GRPC_PORT}"
    networks:
      - sentiric-net
    profiles:
      - default
      - app
    restart: always

    depends_on:
      postgres:
        condition: service_healthy    

  dialplan-service: 

    build:
      context: ../sentiric-dialplan-service
      dockerfile: Dockerfile         
      args:
        SERVICE_NAME: sentiric-dialplan-service

    env_file: 
      - ./.env

    volumes:
      - ../sentiric-config/tls/certs:/etc/sentiric/tls:ro

    # ports:
    #   - "${DIALPLAN_SERVICE_PORT}:${DIALPLAN_SERVICE_PORT}"

    networks:
      - sentiric-net
    
    profiles:
      - default
      - app

    restart: always

    depends_on:
      postgres:
        condition: service_healthy   

  sip-signaling:  

    build:
      context: .
      dockerfile: Dockerfile      
      args:
        SERVICE_NAME: sentiric-sip-signaling

    env_file: 
      - ./.env 

    volumes:
      - ../sentiric-config/tls/certs:/etc/sentiric/tls:ro

    # ports:
    #   - "${SIP_SIGNALING_SERVICE_PORT}:${SIP_SIGNALING_SERVICE_PORT}"

    networks:
      - sentiric-net
    
    profiles:
      - default
      - telekom

    restart: always

    depends_on:
      rabbitmq:
        condition: service_healthy
      user-service:
        condition: service_started
      dialplan-service:
        condition: service_started
      media-service:
        condition: service_started